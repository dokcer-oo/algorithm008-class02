/**
 * 二叉树前序遍历
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> resultList = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        if (null == root) {
            return resultList;
        }
        stack.add(root);
        while (!stack.isEmpty()) {
            TreeNode node = stack.pop();
            resultList.add(node.val);
            if (null != node.right) {
                stack.add(node.right);
            }
            if (null != node.left) {
                stack.add(node.left);
            }
        }
        return resultList;
    }
}


public class TreeNode {
     int val;
     TreeNode left;
     TreeNode right;
     TreeNode(int x) { val = x; }
}